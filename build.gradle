plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
}

version = project.mod_version
group = project.maven_group


base {
    archivesName = project.archives_base_name
}

repositories {
    mavenLocal()
	maven {
		name = 'BlameJared Maven (CrT / Bookshelf)'
		url = 'https://maven.blamejared.com'
	}
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroupByRegex("software\\.bernie.*")
            includeGroup("com.eliotlash.mclib")
        }

    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }


}

loom {
    mods {
        "arma_futuri" {
            //sourceSet sourceSets.main
        }
    }


}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation ("foundry.veil:Veil-fabric-${project.minecraft_version}:${project.veil_version}") { transitive = false }
    include ("foundry.veil:Veil-fabric-${project.minecraft_version}:${project.veil_version}") { transitive = false }
    modRuntimeOnly "maven.modrinth:modmenu:7.2.2"

    include("software.bernie.geckolib:geckolib-fabric-${minecraft_version}:${geckolib_version}")
    modImplementation("software.bernie.geckolib:geckolib-fabric-${minecraft_version}:${geckolib_version}")
    implementation("com.eliotlash.mclib:mclib:20")

    //modRuntimeOnly "maven.modrinth:sodium:mc1.20.1-0.5.3"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}
